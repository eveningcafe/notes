{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/prometheus-prometheus-openstack-exporter-readme","result":{"data":{"brainNote":{"slug":"prometheus-prometheus-openstack-exporter-readme","title":"prometheus-prometheus-openstack-exporter-readme","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"prometheus-prometheus-openstack-exporter-readme\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Prometheus OpenStack exporter\"), mdx(\"p\", null, \"Exposes high level \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.openstack.org/\"\n  }, \"OpenStack\"), \" metrics to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://prometheus.io/\"\n  }, \"Prometheus\"), \".\"), mdx(\"p\", null, \"Data can be visualised using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://grafana.com/\"\n  }, \"Grafana\"), \" and the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://grafana.com/dashboards/7924\"\n  }, \"OpenStack Clouds Dashboard\")), mdx(\"h1\", null, \"Deployment\"), mdx(\"h2\", null, \"Requirements\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo apt-get install python-neutronclient python-novaclient python-keystoneclient python-netaddr python-cinderclient\\n\")), mdx(\"p\", null, \"Install prometheus_client. On Ubuntu 16.04:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"apt-get install python-prometheus-client\\n\")), mdx(\"p\", null, \"On Ubuntu 14.04:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"pip install prometheus_client\\n\")), mdx(\"h2\", null, \"Installation\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# Copy example config in place, edit to your needs\\nsudo cp prometheus-openstack-exporter.yaml /etc/prometheus/\\n\\n## Upstart\\n# Install job\\nsudo cp prometheus-openstack-exporter.conf /etc/init\\n\\n# Configure novarc location:\\nsudo sh -c 'echo \\\"NOVARC=/path/to/admin-novarc\\\">/etc/default/prometheus-openstack-exporter'\\n\\n## Systemd\\n# Install job\\nsudo cp prometheus-openstack-exporter.service /etc/systemd/system/\\n\\n# create novarc\\nsudo cat <<EOF > /etc/prometheus-openstack-exporter/admin.novarc\\nexport OS_USERNAME=Admin\\nexport OS_TENANT_NAME=admin\\nexport OS_PASSWORD=XXXX\\nexport OS_REGION_NAME=cloudname\\nexport OS_AUTH_URL=http://XX.XX.XX.XX:35357/v2.0\\nEOF\\n\\n# create default config location\\nsudo sh -c 'echo \\\"CONFIG_FILE=/etc/prometheus-openstack-exporter/prometheus-openstack-exporter.yaml\\\">/etc/default/prometheus-openstack-exporter'\\n\\n\\n# Start\\nsudo start prometheus-openstack-exporter\\n\")), mdx(\"p\", null, \"Or to run interactively:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \". /path/to/admin-novarc\\n./prometheus-openstack-exporter prometheus-openstack-exporter.yaml\\n\\n\")), mdx(\"h1\", null, \"Configuration\"), mdx(\"p\", null, \"Configuration options are documented in prometheus-openstack-exporter.yaml shipped with this project\"), mdx(\"h1\", null, \"FAQ\"), mdx(\"h2\", null, \"Why are openstack_allocation_ratio values hardcoded?\"), mdx(\"p\", null, \"There is no way to retrieve them using OpenStack API.\"), mdx(\"p\", null, \"Alternative approach could be to hardcode those values in queries but this approach breaks when allocation ratios change.\"), mdx(\"h2\", null, \"Why hardcode swift host list?\"), mdx(\"p\", null, \"Same as above, there is no way to retrieve swift hosts using API.\"), mdx(\"h2\", null, \"Why not write dedicated swift exporter?\"), mdx(\"p\", null, \"Swift stats are included mainly because they are trivial to retrieve. If and when standalone swift exporter appears we can revisit this approach\"), mdx(\"h2\", null, \"Why cache data?\"), mdx(\"p\", null, \"We are aware that Prometheus best practise is to avoid caching. Unfortunately queries we need to run are very heavy and in bigger clouds can take minutes to execute. This is problematic not only because of delays but also because multiple servers scraping the exporter could have negative impact on the cloud performance\"), mdx(\"h2\", null, \"How are Swift account metrics obtained?\"), mdx(\"p\", null, \"Fairly simply!  Given a copy of the Swift rings (in fact, we just need\\naccount.ring.gz) we can load this up and then ask it where particular\\naccounts are located in the cluster.  We assume that Swift is\\nreplicating properly, pick a node at random, and ask it for the\\naccount's statistics with an HTTP HEAD request, which it returns.\"), mdx(\"h2\", null, \"How hard would it be to export Swift usage by container?\"), mdx(\"p\", null, \"Sending a GET request to the account URL yields a list of containers\\n(probably paginated, so watch out for that!).  In order to write a\\ncontainer-exporter, one could add some code to fetch a list of\\ncontainers from the account server, load up the container ring, and\\nthen use container_ring.get_nodes(account, container) and HTTP HEAD on\\none of the resulting nodes to get a containers' statistics, although\\nwithout some caching cleverness this will scale poorly.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"About these notes","slug":"about","childMdx":{"excerpt":"Hi, I'm  Kien Nguyen-Tuan  ðŸ‘‹. prometheus-promql-gotchas prometheus-prometheus-promql-join prometheus-prometheus-labels-relabel prometheusâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"@kiennt's notes"}}},"pageContext":{"slug":"prometheus-prometheus-openstack-exporter-readme"}},"staticQueryHashes":[]}