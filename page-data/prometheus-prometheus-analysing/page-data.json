{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/prometheus-prometheus-analysing","result":{"data":{"brainNote":{"slug":"prometheus-prometheus-analysing","title":"prometheus-prometheus-analysing","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"prometheus-prometheus-analysing\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Analysing Prometheus\"), mdx(\"h2\", null, \"Analysing Prometheus Memory Usage\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.robustperception.io/analysing-prometheus-memory-usage\"\n  }, \"https://www.robustperception.io/analysing-prometheus-memory-usage\")), mdx(\"p\", null, \"Prometheus is linked with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://golang.org/pkg/net/http/pprof/\"\n  }, \"pprof\"), \", a Go profiling tool that makes it easy to look at CPU and memory usage. To use it against a Prometheus server to investigate memory usage, ensure you have a working Go install and then run:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"go tool pprof -svg http://<prometheus-ip>:9090/debug/pprof/heap > heap.svg\\n\")), mdx(\"p\", null, \"Output:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"./imgs/heap12.svg\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"Useful metrics:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"process_resident_memory_bytes\"), \": the amount of memory the Prometheus process is using from the kernel.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"go_memstats_alloc_bytes\"), \": how much Go is using from that. A large difference between these two could indicate spiky memory usage, or fragmentation issues.\")), mdx(\"h2\", null, \"Using tsdb analyze to investigate churn and cardinality\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How many time series you have?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How often the set of time series changes?\")), mdx(\"p\", null, \"Usage:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"./tsdb analyze /path/to/some/prometheus/datadir | less\\n\")), mdx(\"p\", null, \"Output:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# Overview\\nBlock path: /some/datadir/01D2D1ZHR6N6XDFRBDXJ5SSHKB\\nDuration: 2h0m0s\\nSeries: 15680\\nLabel names: 52\\nPostings (unique label pairs): 2110\\nPostings entries (total label pairs): 71352\\n\\n# Churn in label pairs\\nLabel pairs most involved in churning:\\n17 job=node\\n11 __name__=node_systemd_unit_state\\n6 instance=foo:9100\\n4 instance=bar:9100\\n3 instance=baz:9100\\n\\n# Cardinality for label pairs\\nMost common label pairs:\\n12503 job=node\\n8060 __name__=node_systemd_unit_state\\n4613 instance=foo:9100\\n3035 instance=bar:9100\\n2455 instance=baz:9100\\n\\nHighest cardinality labels:\\n1037 name\\n589 __name__\\n53 ifDescr\\n53 le\\n50 ifName\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"About these notes","slug":"about","childMdx":{"excerpt":"Hi, I'm  Kien Nguyen-Tuan  ðŸ‘‹. prometheus-promql-gotchas prometheus-prometheus-promql-join prometheus-prometheus-labels-relabel prometheusâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"@kiennt's notes"}}},"pageContext":{"slug":"prometheus-prometheus-analysing"}},"staticQueryHashes":[]}