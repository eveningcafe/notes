{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/prometheus-prometheus-self-monitoring","result":{"data":{"brainNote":{"slug":"prometheus-prometheus-self-monitoring","title":"prometheus-prometheus-self-monitoring","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"prometheus-prometheus-self-monitoring\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Who watches the watchmen?\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://utcc.utoronto.ca/~cks/space/blog/sysadmin/PrometheusSelfMonitoring\"\n  }, \"Source\")), mdx(\"p\", null, \"Monitor Prometheus itself.\"), mdx(\"p\", null, \"A lot of how we're monitoring for problems is probably basically standard in Prometheus deployments. The 1st level of monitoring and alerts is things inside Prometheus:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Alert on unresponsive host agents as part of our general checking for and alerting on down hosts; this will catch when a configured machine doesn't have the agent installed or it hasn't been started. The one thing it won't catch is a production machine that hasn't been added to our Prometheus configuration. (This alert uses the Prometheus \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"up\"), \" metric)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Alert if Prometheus can't talk to a number of other metric sources it's specifically configured to pull from, such as Grafana, Pushgateway, the Blackbox agent itself, Alertmanager...This is also based on the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"up\"), \" metric, excluding the ones for host agents and for all of our Blackbox checks (which generate \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"up\"), \" metrics themeselves, which can be distinguished from regular \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"up\"), \" metrics because the Blackbox check ones have a non-empty \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"probe\"), \" label).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Publish some system-wide information for temperature sensor readings and global disk space, so we have checks to make sure this information is both present at all and not too old.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Publish various per-host information through the host agent's \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"textfile\"), \" collector, where you put files of metrics you want to publish in a specific directory, so we check to make sure that these files aren't too stale through the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"node_textfile_mtime_seconds\"), \" metric.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A useful check on Alertmanager because if Alertmanager is down, Prometheus can't send out the alert it detects.\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"About these notes","slug":"about","childMdx":{"excerpt":"Hi, I'm  Kien Nguyen-Tuan  ðŸ‘‹. prometheus-promql-gotchas prometheus-prometheus-promql-join prometheus-prometheus-labels-relabel prometheusâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"@kiennt's notes"}}},"pageContext":{"slug":"prometheus-prometheus-self-monitoring"}},"staticQueryHashes":[]}