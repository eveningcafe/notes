{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/about","result":{"data":{"brainNote":{"slug":"about","title":"About these notes","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"About these notes\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hi, I'm \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ntk148v/\"\n  }, \"Kien Nguyen-Tuan\"), \" \\uD83D\\uDC4B.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/notes/vim-buffers\"\n  }, \"vim-buffers\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/notes/vim-sessions\"\n  }, \"vim-sessions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/notes/git-tips-tricks\"\n  }, \"git-tips-tricks\")))));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[],"outboundReferenceNotes":[{"title":"vim-buffers","slug":"vim-buffers","childMdx":{"excerpt":"Source:  https://joshldavis.com/2014/04/05/vim-tab-madness-buffers-vs-tabs/ 1. Buffers Buffers in vim are  the in-memory text of files . For…"}},{"title":"vim-sessions","slug":"vim-sessions","childMdx":{"excerpt":"Check out the  document , here is the scenario to explain how it works and how its use case. You are editing a dozen of files, complex…"}},{"title":"git-tips-tricks","slug":"git-tips-tricks","childMdx":{"excerpt":"1. List only untracked files 2. Use --diff-filter What is diff-filter?"}}]},"site":{"siteMetadata":{"title":"@kiennt's notes"}}},"pageContext":{"slug":"about"}},"staticQueryHashes":[]}