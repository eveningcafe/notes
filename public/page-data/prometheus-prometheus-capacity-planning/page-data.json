{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/prometheus-prometheus-capacity-planning","result":{"data":{"brainNote":{"slug":"prometheus-prometheus-capacity-planning","title":"prometheus-prometheus-capacity-planning","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"prometheus-prometheus-capacity-planning\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Prometheus Capacity Planning\"), mdx(\"h2\", null, \"Storage\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The best disk for time series database is SSD.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The rough formula:\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"needed_disk_space = retention_time_seconds * ingested_samples_per_second * bytes_per_sample\\n\\ningested_samples_per_second = rate(prometheus_tsdb_head_samples_appended_total[5m])\\nbytes_per_sample = rate(prometheus_tsdb_compaction_chunk_size_bytes_sum[1d]) / rate(prometheus_tsdb_compaction_chunk_samples_sum[1d])\\n\\nneeded_disk_space = retention_time_seconds * rate(prometheus_tsdb_compaction_chunk_size_bytes_sum[1d]) / rate(prometheus_tsdb_compaction_chunk_samples_sum[1d]) * rate(prometheus_tsdb_head_samples_appended_total[5m])\\n\")), mdx(\"h2\", null, \"Memory\"), mdx(\"p\", null, \"How much RAM you will need? The storage in Prometheus 2.x works in blocks that are written out every two hours and subsequently into larger time ranges. The storage engine does no internal caching, rather it uses your kernel's page cache.\"), mdx(\"p\", null, \"Each sample is generally 1-2 bytes in size. Let's err on side of caution and use 2 bytes. Assuming we're collecting 100,000 samples/s for 12 hours, we can work out memory usage like so:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"100,000 * 2 bytes * 43200 seconds\\n~8.64GB of RAM\\n\")), mdx(\"p\", null, \"You'll also need to factor in memory use for querying and recording rules.\"), mdx(\"p\", null, \"If you already knew number of time series, average labels per time series, number of unique label pairs,...you can fill into the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.robustperception.io/how-much-ram-does-prometheus-2-x-need-for-cardinality-and-ingestion\"\n  }, \"calculator\")), mdx(\"h2\", null, \"CPU\"), mdx(\"p\", null, \"Prometheus is relatively light on CPU.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"About these notes","slug":"about","childMdx":{"excerpt":"Hi, I'm  Kien Nguyen-Tuan  ðŸ‘‹. prometheus-promql-gotchas prometheus-prometheus-promql-join prometheus-prometheus-labels-relabel prometheusâ€¦"}}],"outboundReferenceNotes":[]},"site":{"siteMetadata":{"title":"@kiennt's notes"}}},"pageContext":{"slug":"prometheus-prometheus-capacity-planning"}},"staticQueryHashes":[]}